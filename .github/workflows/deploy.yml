name: Docker Build and Deploy

on:
  push:
    branches:
      - main # main 브랜치에 Push할 때 실행
  workflow_dispatch: # 수동 실행 지원

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Docker 로그인
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }} # Docker Hub 사용자명
          password: ${{ secrets.DOCKER_PASSWORD }} # Docker Hub 비밀번호

      # 환경 변수 파일 생성
      - name: Set environment values
        run: |
          cd ./src/main/resources
          touch env.properties
          echo "CONCERTLY_DATABASE_USERNAME=${{ secrets.CONCERTLY_DATABASE_USERNAME }}" > env.properties
          echo "CONCERTLY_DATABASE_PASSWORD=${{ secrets.CONCERTLY_DATABASE_PASSWORD }}" >> env.properties
          echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> env.properties
        shell: bash

      # 3. Docker 이미지 빌드 및 Push
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: . # Dockerfile의 위치
          push: true # 푸쉬 활성화
          tags: wnsgur13579/concertly:latest
          build-args: |
            CONCERTLY_DATABASE_USERNAME=${{ secrets.CONCERTLY_DATABASE_USERNAME }}
            CONCERTLY_DATABASE_PASSWORD=${{ secrets.CONCERTLY_DATABASE_PASSWORD }}
            JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push # 'build-and-push' Job 완료 후 실행

    steps:
      # 1. SSH 연결 설정 및 클라우드 서버 명령어 실행
      - name: Deploy Docker on server
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.CLOUD_SERVER_HOST }} # 클라우드 서버 IP
          username: ${{ secrets.CLOUD_SERVER_USER }} # 서버 사용자명
          password: ${{ secrets.CLOUD_SERVER_PASSWORD }} # (패스워드 또는 SSH Key 필요)
          port: 22
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            # DockerHub 로그인
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
            # 도커 이미지 Pull
            docker pull wnsgur13579/concertly:latest
            # 실행 중인 컨테이너 중지 및 제거 (클린업)
            docker stop concertly-app || true && docker rm concertly-app || true

            # 새로운 컨테이너 실행
            docker run -d \
              --name concertly-app \
              -p 80:8080 \
              wnsgur13579/concertly:latest